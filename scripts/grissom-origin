#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# grissom - FOSS compliance tools
#
# Copyright (c) 2013 Eric Le Bihan <eric.le.bihan.dev@free.fr>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import sys
import os
import argparse
from gettext import gettext as _
from grissom import __version__
from grissom.common import sanitize_args, NoMatchError, setup_i18n
from grissom.misc import SourceCodeFinder

setup_i18n()

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--version',
                        action='version',
                        version=__version__)
    parser.add_argument('filenames',
                        metavar='FILE',
                        nargs='+',
                        help=_('file to identify'))
    parser.add_argument('-I', '--include',
                        action='append',
                        dest='search_paths',
                        default=[],
                        metavar='DIR',
                        help=_('set source code search path'))
    parser.add_argument('-S', '--strip',
                        metavar='CMD',
                        dest='strip_cmd',
                        default='strip',
                        help=_('set command to discard symbols'))
    parser.add_argument('-Q', '--quiet',
                        action='store_true',
                        default=False,
                        help=_('be quiet'))

    args = parser.parse_args()

    if not args.search_paths:
        args.search_paths = [os.getcwd()]

    finder = SourceCodeFinder(not args.quiet)
    finder.strip_command = args.strip_cmd
    for path in args.search_paths:
        finder.add_search_path(path)

    n_errors = 0

    for filename in sanitize_args(args.filenames):
        try:
            path = finder.find_origin_of(filename)
            print("{0}: {1}".format(filename, path))
        except NoMatchError:
            print(_("No match for {0}").format(filename),
                  file=sys.stderr)
            n_errors += 1

    sys.exit(n_errors)

# vim: ts=4 sts=4 sw=4 et ai
